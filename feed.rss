<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>That About Sums It Up</title><description>write is code, think ux design.</description><link>https://agiletalk.github.io</link><language>ko</language><lastBuildDate>Sat, 19 Mar 2022 22:02:04 +0900</lastBuildDate><pubDate>Sat, 19 Mar 2022 22:02:04 +0900</pubDate><ttl>250</ttl><atom:link href="https://agiletalk.github.io/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://agiletalk.github.io/posts/pragmatic-philosophy</guid><title>실용주의 철학</title><description></description><link>https://agiletalk.github.io/posts/pragmatic-philosophy</link><pubDate>Sat, 19 Mar 2022 22:00:00 +0900</pubDate><content:encoded><![CDATA[<h1>실용주의 철학</h1><h2>오늘 TIL 3줄 요약</h2><ul><li>자신의 기예에 관심을 가져라.</li><li>변화의 촉매가 되라.</li><li>지식 포트폴리오에 주기적으로 투자하라.</li></ul><h2>TIL (Today I Learned) 날짜</h2><p><code>2022. 03. 19.</code></p><h2>오늘 읽은 범위</h2><p>서문 ~ 1장. 실용주의 철학</p><h2>책에서 기억하고 싶은 내용을 써보세요.</h2><ul><li>무엇보다 중요한 것은 즐기는 것이다.</li><li><strong>"당신은 당신의 조직을 바꾸거나, 당신의 조직을 바꿀 수 있다."</strong></li><li>무엇보다 여러분의 팀이 여러분을 믿고 의지할 수 있어야 한다. 여러분도 다른 팀원 누구에게나 편하게 의지할 수 있어야 한다.</li><li>변명 말고 대안을 제시하라. 안된다고 하지 말고 상황을 개선하기 위해 무엇을 할 수 있는지 설명하라.</li><li>나쁜 설계, 잘못된 결정, 혹은 형편없는 코드 등이 모두 깨진 창문이다. 발견하자마자 바로 고쳐라.</li><li>여러분이 만드는 시스템의 범위와 품질은 해당 시스템의 요구 사항 중 하나로 논의되어야 한다.</li><li><strong>사용자에게 뭔가 직접 만져볼 수 있는 것을 일찍 준다면, 피드백을 통해 종국에는 더 나은 해결책에 도달할 수 있을 것이다.</strong></li><li>여러분의 기술 달걀을 모두 한 바구니에 담지 말라.</li><li>투자를 지속하는 것이 중요하다. 한 기술의 새로운 용어나 기능에 익숙해지면 다음으로 나아가라. 또 다른 것을 배워라.</li><li>코드를 작성하는 것은 우리의 의도를 기계에게 전달하는 것이기도 하지만, 생각을 기록하여 다음 세대의 개발자들에게 전달하는 것이기도 하다.</li><li><strong>다른 모든 형태의 의사소통과 마찬가지로 여기서도 비결은 피드백을 모으는 것이다. 그저 질문을 기다리지 말고 먼저 물어보라.</strong></li><li>실용주의 프로그래머는 문서화를 전체 개발 프로세스의 필요 불가결한 부분으로 받아들인다.</li></ul><h2>오늘 읽은 소감은? 떠오르는 생각을 가볍게 적어보세요.</h2><p>오랜만에 다시 읽는 책이지만 또 새롭다. 역시 본질은 달라지지 않는다. 그때 내용이 지금도 유효한 것들이 많다.</p><p>깨진 창문, 지식 포트폴리오, 문서화 이야기는 읽으면서 많이 반성하게 되었다. 인정했으니 이제 개선해보자!</p><p>지식 포트폴리오에 주기적으로 투자해야겠다. 일단 블로그부터 열심히 쓰고, 새로운 언어를 하나 배워봐야겠다~</p><h2>궁금한 내용이 있거나, 잘 이해되지 않는 내용이 있다면 적어보세요.</h2><ul><li>코드를 현재 상태로 한동안 그대로 놓아두어야 할 <strong>'적당히 괜찮은'</strong> 상태란 무엇일까? 어떤 기준으로 정할 수 있을까?</li></ul><h2>오늘 읽은 다른사람의 TIL</h2><p><a href="https://jiyoungyim100.notion.site/TIL-2022-03-19-1-fc4e455c01bb417dad864e915fca05cc">TIL (2022.03.19) - 서문 &amp; 1장. 실용주의 철학</a></p>]]></content:encoded></item><item><guid isPermaLink="true">https://agiletalk.github.io/posts/book-challenge-pragmatic</guid><title>실용주의 프로그래머</title><description></description><link>https://agiletalk.github.io/posts/book-challenge-pragmatic</link><pubDate>Fri, 18 Mar 2022 22:36:00 +0900</pubDate><content:encoded><![CDATA[<h1>실용주의 프로그래머</h1><img src="https://agiletalk.github.io/images/eb4c59d4-6d38-4fe4-8976-5511b714591f.JPG" alt="The Pragmatic Programmer"/><p>오늘부터 <a href="https://nomadcoders.co/pragmatic-programmer">노마드 챌린지</a>를 통해 실용주의 프로그래머 읽기 시작 📖</p>]]></content:encoded></item><item><guid isPermaLink="true">https://agiletalk.github.io/posts/first-post</guid><title>Start when you're ready</title><description></description><link>https://agiletalk.github.io/posts/first-post</link><pubDate>Sun, 1 Mar 2020 22:34:00 +0900</pubDate><content:encoded><![CDATA[<p>You've been building experience all your life. Don't ignore niggling doubts.</p><blockquote><p>The Pragmatic Programmer's 56th Tip.</p></blockquote>]]></content:encoded></item></channel></rss>